{"version":3,"sources":["Home.js","Slides.js","App.js","serviceWorker.js","index.js"],"names":["Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","readyToAdd","successfullyInstalled","acceptedInstall","declinedInstall","addToHome","bind","assertThisInitialized","shouldShowAddButton","openWindowOrTab","_this2","window","matchMedia","matches","console","log","setState","addEventListener","e","preventDefault","deferredPrompt","evt","_this3","prompt","userChoice","then","choiceResult","outcome","shouldShow","url","arguments","length","undefined","location","href","open","_this4","react_default","a","createElement","className","onClick","React","Component","Slides","build_default","showIndex","enableKeyboard","useDotIndex","defaultIndex","effect","height","width","autoplay","showArrows","id","src","alt","class","draggable","data-marp-twemoji","App","BrowserRouter","Switch","Route","path","exact","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.014b0eda.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Home extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            readyToAdd: false,\n            successfullyInstalled: false,\n            acceptedInstall: false,\n            declinedInstall: false,\n        };\n        this.addToHome = this.addToHome.bind(this);\n        this.shouldShowAddButton = this.shouldShowAddButton.bind(this);\n        this.openWindowOrTab = this.openWindowOrTab.bind(this);\n    }\n    componentDidMount() {\n        // check if user is already running app from home screen\n        if (window.matchMedia('(display-mode: standalone)').matches) {\n            console.log('App is already installed and running in standalone');\n            this.setState({\n                successfullyInstalled: true,\n            });\n        } else {\n            window.addEventListener('beforeinstallprompt', e => {\n                console.log('beforeinstallprompt has fired', e);\n                // Prevent Chrome 67 and earlier from automatically showing the prompt\n                e.preventDefault();\n                // Stash the event so it can be triggered later.\n                window.deferredPrompt = e;\n                this.setState({\n                    readyToAdd: true,\n                });\n            });\n            // this event fires only when app is installed\n            window.addEventListener('appinstalled', evt => {\n                console.log('App was successfully installed');\n                this.setState({\n                    successfullyInstalled: true,\n                });\n            });\n        }\n    }\n    addToHome() {\n        // Show the prompt\n        let { deferredPrompt } = window;\n        if (deferredPrompt) {\n            deferredPrompt.prompt();\n            // Wait for the user to respond to the prompt\n            deferredPrompt.userChoice.then(choiceResult => {\n                if (choiceResult.outcome === 'accepted') {\n                    console.log('User accepted the A2HS prompt');\n                    this.setState({\n                        acceptedInstall: true,\n                    });\n                } else {\n                    console.log('User dismissed the A2HS prompt');\n                    this.setState({\n                        declinedInstall: true,\n                    });\n                }\n                deferredPrompt = null;\n            });\n        }\n    }\n    shouldShowAddButton() {\n        let shouldShow =\n            this.state.readyToAdd &&\n            !this.state.successfullyInstalled &&\n            !this.state.acceptedInstall &&\n            !this.state.declinedInstall;\n        console.log('Should show add button', shouldShow);\n        return shouldShow;\n    }\n    openWindowOrTab(url = window.location.href) {\n        window.open(url, '_blank');\n    }\n    render(){\n        return(\n            <header className=\"App-header\">\n                <h1>Experimenting with Desktop PWAs</h1>\n                <h2>Modified 20/02 for AB Tasty</h2>\n                <a href=\"/slides\"><h2>Link to Slides</h2></a>\n                {this.shouldShowAddButton() ? (\n                    <button onClick={this.addToHome}>\n                        Add to Home Screen\n                    </button>\n                ) : null}\n                <a href=\"https://developers.google.com/web/progressive-web-apps\">\n                    PWAs\n                </a>\n                <a href=\"chrome://flags/\">Chrome Flags</a>\n                <h3>Test window.open() behaviour :</h3>\n                <a onClick={this.openWindowOrTab}>\n                    window.open() in new window/tab for same domain\n                </a>\n                <a\n                    onClick={() =>\n                        this.openWindowOrTab('https://www.google.com/')\n                    }>\n                    window.open() in new window/tab for different domain\n                </a>\n            </header>\n        )\n    }\n}","import React from 'react';\nimport './Slides.css';\nimport Slideshow from 'react-slidez';\n\nexport default class Slides extends React.Component {\n    componentDidMount(){\n    }\n    render(){ \n        return (            \n                <Slideshow\n                    showIndex\n                    enableKeyboard\n                    useDotIndex\n                    defaultIndex={0}\n                    effect={'fade'}\n                    height={'100%'}\n                    width={'100%'}\n                    autoplay={false}\n                    showArrows={false}\n                >\n                    <section id=\"one\">\n                        <h4>BOOST YOUR SKILLS</h4>\n                        <h1>Progressive Web App (PWA)</h1>\n                        <img src=\"https://i.imgur.com/DqKmSyJ.png\" alt=\"logo\"/>\n                    </section>\n                    <section id=\"two\">\n                        <h1>Programme PWA :</h1>\n                        <ul>\n                        <li><strong>1. Qu'est-ce c'est ?</strong></li>\n                        <li><strong>2. Pourquoi en développer ?</strong></li>\n                        <li><strong>3. Comment c'est fait ?</strong></li>\n                        <li><strong>4. Comment A/B Tester ?</strong></li>\n                        </ul>\n                    </section>\n                    <section id=\"three\" className=\"center\">\n                        <h1>Qu'est-ce qu'une PWA?</h1>\n                        <h1><img class=\"emoji\" draggable=\"false\" alt=\"🤔\" src=\"https://twemoji.maxcdn.com/2/svg/1f914.svg\" data-marp-twemoji=\"\"/> <img class=\"emoji\" draggable=\"false\" alt=\"🤔\" src=\"https://twemoji.maxcdn.com/2/svg/1f914.svg\" data-marp-twemoji=\"\"/> <img class=\"emoji\" draggable=\"false\" alt=\"🤔\" src=\"https://twemoji.maxcdn.com/2/svg/1f914.svg\" data-marp-twemoji=\"\"/> <img class=\"emoji\" draggable=\"false\" alt=\"🤔\" src=\"https://twemoji.maxcdn.com/2/svg/1f914.svg\" data-marp-twemoji=\"\"/></h1>\n                    </section>\n                    <section id=\"four\">\n                        <h1>1. Qu'est-ce qu'une PWA ?</h1>\n                        <br />\n                        <p>Une progressive web app (PWA) est une application web qui peut apparaître à l'utilisateur de la même manière que les applications natives à l'appareil. </p>\n                        <br></br><br></br>\n                        <p>Ce type d'applications tente de combiner les fonctionnalités offertes par la plupart des navigateurs modernes avec les avantages de l'expérience offerte par les appareils mobile.</p>\n                    </section>\n                    <section id=\"five\" className=\"center\">\n                        <h1>Pourquoi développer une PWA ?</h1>\n                        <h1><img class=\"emoji\" draggable=\"false\" alt=\"🤔\" src=\"https://twemoji.maxcdn.com/2/svg/1f914.svg\" data-marp-twemoji=\"\"/> <img class=\"emoji\" draggable=\"false\" alt=\"🤔\" src=\"https://twemoji.maxcdn.com/2/svg/1f914.svg\" data-marp-twemoji=\"\"/> <img class=\"emoji\" draggable=\"false\" alt=\"🤔\" src=\"https://twemoji.maxcdn.com/2/svg/1f914.svg\" data-marp-twemoji=\"\"/></h1>\n                    </section>\n                    <section id=\"six\">\n                        <h1>2. Pourquoi développer une PWA ?</h1>\n                        <ul>\n                        <li><strong>Fiable</strong> : Charge instantanément et ne montre jamais le downsaur, même dans des conditions de réseau incertaines<br />\n                            <br /></li>\n                            <li><strong>Rapide</strong> : Répond rapidement aux interactions des utilisateurs avec des scrolls et animations douces<br />\n                            <br /></li>\n                            <li><strong>$ Engageante $</strong> : L'utilisateur se sent comme dans une application native sur l'appareil,<br/> avec une expérience utilisateur immersive. Il  reste plus longtemps sur le site et revient plus souvent.</li>\n                            </ul>\n                        </section>\n                    <section id=\"seven\">\n                        <h1>++ D'info</h1>\n                        <ul className=\"\">\n                            <a href=\"https://developers.google.com/web/progressive-web-apps/#engaging\">https://developers.google.com/web/progressive-web-apps/#engaging</a>\n                            <li>Les service workers ont permis à Konga d’envoyer <strong>63%</strong> moins de données pour les chargements de page initiaux et <strong>84%</strong> moins de données pour terminer la première transaction</li>\n                            <li>La capacité de fournir une meilleure UX a aidé AliExpress à améliorer les conversions pour les nouveaux utilisateurs de tous les navigateurs de <strong>104%</strong> et sur iOS de <strong>82%</strong>.</li>\n                            <li>Les notifications Web Push ont aidé eXtra Electronics à augmenter l'engagement de <strong>4X</strong>. Et ces utilisateurs passent deux fois plus de temps sur le site.</li>\n                        </ul>\n                        </section>\n                    <section id=\"eight\">\n                        <h1>3. Comment est développée une PWA (baseline)?</h1>\n                        <ul>\n                        <li><strong>Service Worker</strong> : Un Service Worker est un JavaScript Worker qui permet que <strong>toutes</strong> les URL de l'application se chargent hors connexion</li>\n                        <li><strong>Web App Manifest</strong> : Fichier contenant les <strong>métadonnées</strong> fournies pour ajouter à l'écran d'accueil</li>\n                        <li><strong>HTTPS</strong> : Exclusivement</li>\n                        </ul>\n                    </section>\n                    <section id=\"nine\">\n                        <h1>3. Comment est développée une PWA (baseline)?</h1>\n                        <ul>\n                        <li><strong>Responsive</strong> : Sur tablettes et mobiles</li>\n                        <li><strong>Chargement rapide même dans des mauvaises connections</strong> : Sur Nexus 5 (ou similaire), le &quot;time to interactive&quot; <strong>&lt; 10s</strong> pour une première visite sur un réseau 3G</li>\n                        <li><strong>Cross Browser</strong> : Chrome, Edge, Firefox and Safari</li>\n                        <li><strong>Transitions de page fluides</strong> : Si une SPA est utilisée (render par le client), passez immédiatement à la page suivante, affichez un écran &quot;skeleton&quot; et avec tout contenu tel que le titre ou le thumbnail déjà disponible pendant le chargement du contenu.</li>\n                        </ul>\n                    </section>\n                    <section id=\"ten\">\n                        <h1>4. Comment A/B Tester ?</h1>\n                        <p>Un <em>Service Worker</em> se comporte comme un Proxy réseau programmable qui permet de contrôler le traitement des demandes réseau de votre page.</p>\n                        <p>Une fois activé, le SW &quot;manipule&quot; (<em>handle</em>) des <em>fetch</em> et <em>message</em> <em>events</em></p>\n                    </section>\n                    <section id=\"eleven\">\n                        <h1>Merci ! <img class=\"emoji\" draggable=\"false\" alt=\"😄\" src=\"https://twemoji.maxcdn.com/2/svg/1f604.svg\" data-marp-twemoji=\"\"/></h1>\n                    </section>\n                </Slideshow>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './Home';\nimport Slides from './Slides';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            readyToAdd: false,\n            successfullyInstalled: false,\n            acceptedInstall: false,\n            declinedInstall: false,\n        };\n        this.addToHome = this.addToHome.bind(this);\n        this.shouldShowAddButton = this.shouldShowAddButton.bind(this);\n        this.openWindowOrTab = this.openWindowOrTab.bind(this);\n    }\n    componentDidMount() {\n        // check if user is already running app from home screen\n        if (window.matchMedia('(display-mode: standalone)').matches) {\n            console.log('App is already installed and running in standalone');\n            this.setState({\n                successfullyInstalled: true,\n            });\n        } else {\n            window.addEventListener('beforeinstallprompt', e => {\n                console.log('beforeinstallprompt has fired', e);\n                // Prevent Chrome 67 and earlier from automatically showing the prompt\n                e.preventDefault();\n                // Stash the event so it can be triggered later.\n                window.deferredPrompt = e;\n                this.setState({\n                    readyToAdd: true,\n                });\n            });\n            // this event fires only when app is installed\n            window.addEventListener('appinstalled', evt => {\n                console.log('App was successfully installed');\n                this.setState({\n                    successfullyInstalled: true,\n                });\n            });\n        }\n    }\n    addToHome() {\n        // Show the prompt\n        let { deferredPrompt } = window;\n        if (deferredPrompt) {\n            deferredPrompt.prompt();\n            // Wait for the user to respond to the prompt\n            deferredPrompt.userChoice.then(choiceResult => {\n                if (choiceResult.outcome === 'accepted') {\n                    console.log('User accepted the A2HS prompt');\n                    this.setState({\n                        acceptedInstall: true,\n                    });\n                } else {\n                    console.log('User dismissed the A2HS prompt');\n                    this.setState({\n                        declinedInstall: true,\n                    });\n                }\n                deferredPrompt = null;\n            });\n        }\n    }\n    shouldShowAddButton() {\n        let shouldShow =\n            this.state.readyToAdd &&\n            !this.state.successfullyInstalled &&\n            !this.state.acceptedInstall &&\n            !this.state.declinedInstall;\n        console.log('Should show add button', shouldShow);\n        return shouldShow;\n    }\n    openWindowOrTab(url = window.location.href) {\n        window.open(url, '_blank');\n    }\n    render() {\n        return (\n            <BrowserRouter>\n            <main className=\"App\">\n              <Switch>\n                <Route path=\"/\" exact component={Home}/>\n                <Route path=\"/slides\" component={Slides} />\n              </Switch>\n            </main>\n          </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}